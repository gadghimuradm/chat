<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>